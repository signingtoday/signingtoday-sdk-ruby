=begin
#Signing Today Web

#*Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for SigningTodayAPIClient::ResourcesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ResourcesApi' do
  before do
    # run before each test
    @api_instance = SigningTodayAPIClient::ResourcesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ResourcesApi' do
    it 'should create an instance of ResourcesApi' do
      expect(@api_instance).to be_instance_of(SigningTodayAPIClient::ResourcesApi)
    end
  end

  # unit tests for d_st_id_resources_get
  # Retrieve all resources associated to a DST
  # This API allows to retrieve all resources associated to a DST.
  # @param id The value of _the unique id_
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'd_st_id_resources_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for d_st_id_resources_patch
  # Append a new resource to a DST
  # This API allows to append a new Resource to a DST.
  # @param id The value of _the unique id_
  # @param file The file to upload
  # @param filename The name of the file
  # @param resource_type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :title User-defined title of the resource.
  # @return [DigitalSignatureTransaction]
  describe 'd_st_id_resources_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for d_st_resource_id_delete
  # Delete a Resource
  # This API allows to delete a Resource.
  # @param id The value of _the unique id_
  # @param [Hash] opts the optional parameters
  # @return [DigitalSignatureTransaction]
  describe 'd_st_resource_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resource_id_get
  # Retrieve a Resource
  # This API allows to retrieve a Resource.
  # @param id The value of _the unique id_
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'resource_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resource_id_put
  # Update a Resource
  # This API allows to update a Resource.
  # @param id The value of _the unique id_
  # @param lf_resource Resource replacing current object.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'resource_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_id_identity_identity_id_appearance_delete
  # Delete a user appearance resource.
  # This API allows to delete an identity appearance resource.
  # @param id The value of _the unique id_
  # @param identity_id The unique id of the _Identity_
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'user_id_identity_identity_id_appearance_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_id_identity_identity_id_appearance_get
  # Download an identity appearance resource
  # This API allows to get the identity appearance resource.
  # @param id The value of _the unique id_
  # @param identity_id The unique id of the _Identity_
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'user_id_identity_identity_id_appearance_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_id_identity_identity_id_appearance_post
  # Add a graphical appearance to a user&#39;s identity
  # This API allows to add a graphical appearance to the identity of a user.
  # @param id The value of _the unique id_
  # @param identity_id The unique id of the _Identity_
  # @param file The path of the file to upload
  # @param filename The name of the file
  # @param resource_type The type of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [String] :title User-defined title of the resource
  # @return [LFResource]
  describe 'user_id_identity_identity_id_appearance_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
