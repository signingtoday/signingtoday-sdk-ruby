=begin
#Signing Today Web

#*Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for SigningTodayAPIClient::Bit4idPathgroupRobotsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'Bit4idPathgroupRobotsApi' do
  before do
    # run before each test
    @api_instance = SigningTodayAPIClient::Bit4idPathgroupRobotsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of Bit4idPathgroupRobotsApi' do
    it 'should create an instance of Bit4idPathgroupRobotsApi' do
      expect(@api_instance).to be_instance_of(SigningTodayAPIClient::Bit4idPathgroupRobotsApi)
    end
  end

  # unit tests for robot_authentication_delete
  # Clear a Robot authentication lifetime token
  # This API allows to clear the Robot authentication lifetime token.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :username The _username_ associated to the account
  # @option opts [String] :domain The _domain_ associated to the account
  # @return [nil]
  describe 'robot_authentication_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for robot_authentication_get
  # Retrieve the Robot authentication lifetime token
  # This API allows to generate or retrieves the Robot authentication lifetime token for the specified robot account, or the current logged in account. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :username The _username_ associated to the account
  # @option opts [String] :domain The _domain_ associated to the account
  # @return [RobotAuthenticationToken]
  describe 'robot_authentication_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for robot_configuration_get
  # Retrieve the Robot configuration
  # This API allows to retrieve the Robot configuration. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :username The _username_ associated to the account
  # @option opts [String] :domain The _domain_ associated to the account
  # @return [RobotConfiguration]
  describe 'robot_configuration_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for robot_configuration_put
  # Edit the Robot configuration
  # This API allows to edit the Robot configuration. 
  # @param robot_configuration RobotConfiguration.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :username The _username_ associated to the account
  # @option opts [String] :domain The _domain_ associated to the account
  # @return [nil]
  describe 'robot_configuration_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for robot_ds_ts_post
  # Create a new DST in one call
  # This API allows to create a new DST with a more convenient interface for client applications. The purpose is to provide a method for the creation of a DST in order to semplify the integration into third part applications. 
  # @param create_digital_signature_transaction description
  # @param [Hash] opts the optional parameters
  # @return [DigitalSignatureTransaction]
  describe 'robot_ds_ts_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for robot_id_instantiate_post
  # Instantiate a DST from a template by robot
  # This API allows to instantiate a DST from a template patching parts of its data structure. 
  # @param id The value of _the unique id_
  # @param instantiate_dst_template 
  # @param [Hash] opts the optional parameters
  # @return [DigitalSignatureTransaction]
  describe 'robot_id_instantiate_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
