=begin
#Signing Today Web

#*Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.3

=end

# Common files
require 'signing_today_client/api_client'
require 'signing_today_client/api_error'
require 'signing_today_client/version'
require 'signing_today_client/configuration'

# Models
require 'signing_today_client/models/alfresco_sync'
require 'signing_today_client/models/audit_record'
require 'signing_today_client/models/auth_credential'
require 'signing_today_client/models/create_digital_signature_transaction'
require 'signing_today_client/models/create_document'
require 'signing_today_client/models/create_document_resource'
require 'signing_today_client/models/create_document_source'
require 'signing_today_client/models/create_user_request'
require 'signing_today_client/models/dst_note'
require 'signing_today_client/models/dst_signing_address_response'
require 'signing_today_client/models/dst_status_changed_notification'
require 'signing_today_client/models/ds_ts_get_response'
require 'signing_today_client/models/device_authorization_response'
require 'signing_today_client/models/digital_signature_transaction'
require 'signing_today_client/models/document'
require 'signing_today_client/models/error_response'
require 'signing_today_client/models/fillable_form'
require 'signing_today_client/models/identity'
require 'signing_today_client/models/identity_provider_data'
require 'signing_today_client/models/identity_provider_data_token_info'
require 'signing_today_client/models/inline_object'
require 'signing_today_client/models/inline_object1'
require 'signing_today_client/models/inline_object2'
require 'signing_today_client/models/inline_object3'
require 'signing_today_client/models/inline_object4'
require 'signing_today_client/models/inline_object5'
require 'signing_today_client/models/inline_object6'
require 'signing_today_client/models/inline_object7'
require 'signing_today_client/models/inline_object8'
require 'signing_today_client/models/inline_object9'
require 'signing_today_client/models/inline_response200'
require 'signing_today_client/models/instantiate_dst_template'
require 'signing_today_client/models/lf_resource'
require 'signing_today_client/models/notification_event'
require 'signing_today_client/models/notifications_response'
require 'signing_today_client/models/organization'
require 'signing_today_client/models/organization_private_settings'
require 'signing_today_client/models/organization_public_settings'
require 'signing_today_client/models/organization_settings'
require 'signing_today_client/models/organization_settings_alfresco_properties'
require 'signing_today_client/models/organizations_get_response'
require 'signing_today_client/models/robot_authentication_token'
require 'signing_today_client/models/robot_configuration'
require 'signing_today_client/models/robot_configuration_authentication'
require 'signing_today_client/models/robot_configuration_webhooks'
require 'signing_today_client/models/robot_id_instantiate_roles_mapping'
require 'signing_today_client/models/saml_token'
require 'signing_today_client/models/saml_token_edu_person_targeted_id'
require 'signing_today_client/models/service_failure_response'
require 'signing_today_client/models/signature'
require 'signing_today_client/models/signature_request'
require 'signing_today_client/models/signature_restriction'
require 'signing_today_client/models/signature_status_changed_notification'
require 'signing_today_client/models/signature_status_changed_notification_document'
require 'signing_today_client/models/signature_status_changed_notification_dst'
require 'signing_today_client/models/signer'
require 'signing_today_client/models/signer_instance'
require 'signing_today_client/models/signer_record'
require 'signing_today_client/models/signers_group'
require 'signing_today_client/models/trusted_device'
require 'signing_today_client/models/trusted_devices_get_response'
require 'signing_today_client/models/user'
require 'signing_today_client/models/user_group'
require 'signing_today_client/models/user_group_get_response'
require 'signing_today_client/models/user_sync_report'
require 'signing_today_client/models/user_sync_report_users'
require 'signing_today_client/models/users_get_response'

# APIs
require 'signing_today_client/api/backoffice_api'
require 'signing_today_client/api/bit4id_pathgroup_dst_note_api'
require 'signing_today_client/api/bit4id_pathgroup_devices_api'
require 'signing_today_client/api/bit4id_pathgroup_digital_signature_transactions_api'
require 'signing_today_client/api/bit4id_pathgroup_notifications_api'
require 'signing_today_client/api/bit4id_pathgroup_resources_api'
require 'signing_today_client/api/bit4id_pathgroup_robots_api'
require 'signing_today_client/api/bit4id_pathgroup_services_api'
require 'signing_today_client/api/bit4id_pathgroup_users_api'
require 'signing_today_client/api/dst_note_api'
require 'signing_today_client/api/devices_api'
require 'signing_today_client/api/digital_signature_transactions_api'
require 'signing_today_client/api/notifications_api'
require 'signing_today_client/api/resources_api'
require 'signing_today_client/api/robot_api'
require 'signing_today_client/api/robots_api'
require 'signing_today_client/api/services_api'
require 'signing_today_client/api/signing_services_api'
require 'signing_today_client/api/users_api'

module SigningTodayAPIClient
  class << self
    # Customize default settings for the SDK using block.
    #   SigningTodayAPIClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
