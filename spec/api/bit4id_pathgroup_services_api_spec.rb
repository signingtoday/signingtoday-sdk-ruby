=begin
#Signing Today Web

#*Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for SigningTodayAPIClient::Bit4idPathgroupServicesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'Bit4idPathgroupServicesApi' do
  before do
    # run before each test
    @api_instance = SigningTodayAPIClient::Bit4idPathgroupServicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of Bit4idPathgroupServicesApi' do
    it 'should create an instance of Bit4idPathgroupServicesApi' do
      expect(@api_instance).to be_instance_of(SigningTodayAPIClient::Bit4idPathgroupServicesApi)
    end
  end

  # unit tests for auth_change_password_post
  # Consume a token to change the password
  # This API allows to change the password by consuming a token.
  # @param password_token The password token issued to change password
  # @param body New password associated to the account (BCrypt)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auth_change_password_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_password_lost_get
  # Request to recover own password
  # This API requests to recover the own password.
  # @param username Username associated to the account
  # @param domain Domain associated to the account
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auth_password_lost_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_password_reset_get
  # Reset a user password with superuser
  # This API allows to reset the password of a user. This is possible when the request is performed with a superuser.
  # @param username Username associated to the account
  # @param domain Domain associated to the account
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auth_password_reset_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_password_reset_post
  # Reset your own password
  # This API allows to reset your own password knowing the previous one with a logged user.
  # @param inline_object4 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auth_password_reset_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_password_token_get
  # Get token to change password
  # This API allows to get a password token to use in order to change a password.
  # @param [Hash] opts the optional parameters
  # @return [Array<Object>]
  describe 'auth_password_token_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_saml_post
  # Register or Update a SAML user
  # This API allows to register or Update a SAML user.
  # @param domain SAML domain
  # @param id_token1 The BASE64-encoded SAML Reply in JSON
  # @param id_token2 The Hex-encoded HMAC-SHA256 of the decoded IDToken1
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auth_saml_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_user
  # Return the current logged in user
  # This API allows to retrieve the current logged in user.
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'auth_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for configuration_get
  # Retrieve the App configuration
  # This API allows to get the public configuration associated to the application. 
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'configuration_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for logout_user
  # Log out current user terminating the session
  # This API allows to Log out current user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'logout_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for oauth_token_post
  # Get the bearer token
  # This API allows to get the token needed to access other APIs through the OAuth2 authentication.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :username The username in the form _username_@_domain_ where *domain* is the organization the user belongs to
  # @option opts [String] :password This is the actual password of the user
  # @option opts [String] :grant_type A parameter that indicates the type of the grant in order to perform the basic authentication
  # @return [InlineResponse200]
  describe 'oauth_token_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for pdf_resource_id_thumbs_get
  # Retrieve a Resource (of service)
  # This API allows to extract thumbnails from a PDF Resource.
  # @param id The value of _the unique id_
  # @param page The page to retrieve
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :width The output image width
  # @return [File]
  describe 'pdf_resource_id_thumbs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_change_password_post
  # Change the password of a service user
  # This API allows to change the password of a **service user**. 
  # @param username Username associated to the account
  # @param domain Domain associated to the account
  # @param body New password associated to the account (BCrypt)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'service_change_password_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for service_users_sync_post
  # Sync user accounts
  # This API allows to sync user accounts.
  # @param inline_object User Accounts
  # @param [Hash] opts the optional parameters
  # @return [UserSyncReport]
  describe 'service_users_sync_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
