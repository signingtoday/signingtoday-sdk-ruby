=begin
#Signing Today Web

#*Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter. 

The version of the OpenAPI document: 2.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for SigningTodayAPIClient::Bit4idPathgroupUsersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'Bit4idPathgroupUsersApi' do
  before do
    # run before each test
    @api_instance = SigningTodayAPIClient::Bit4idPathgroupUsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of Bit4idPathgroupUsersApi' do
    it 'should create an instance of Bit4idPathgroupUsersApi' do
      expect(@api_instance).to be_instance_of(SigningTodayAPIClient::Bit4idPathgroupUsersApi)
    end
  end

  # unit tests for user_id_delete
  # Enable or disable a User
  # This API allows to **enable** or **disable** a User account. 
  # @param id The value of _the unique id_
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :enabled This is a _boolean_ parameter. If true the User is **enabled** 
  # @return [nil]
  describe 'user_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_id_get
  # Retrieve a User
  # This API allows to retrieve a User.
  # @param id The value of _the unique id_
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'user_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_id_identities_get
  # Retrieve User identities
  # This API allows to retrieve user identities.
  # @param id The value of _the unique id_
  # @param [Hash] opts the optional parameters
  # @return [Array<Identity>]
  describe 'user_id_identities_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_id_put
  # Update a User
  # This API allows to update a User.
  # @param id The value of _the unique id_
  # @param user User replacing current object.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'user_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_id_role_put
  # Change the User role
  # This API allows to change the permissions associated to the users, (**capabilities**) according to predefined user roles. 
  # @param id The value of _the unique id_
  # @param new_role The new **role** of the User. Allowed values are **admin**, **instructor**, **signer** 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'user_id_role_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_get
  # Retrieve Users
  # This allows to get the list of the Users of an Organization.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :top A number of results to return. Applied after **$skip** 
  # @option opts [Integer] :skip An offset into the collection of results
  # @option opts [Boolean] :count If true, the server includes the count of all the items in the response 
  # @option opts [String] :order_by An ordering definition (eg. $orderBy&#x3D;updatedAt,desc)
  # @option opts [String] :filter A filter definition (eg. $filter&#x3D;name &#x3D;&#x3D; \&quot;Milk\&quot; or surname &#x3D;&#x3D; \&quot;Bread\&quot;)
  # @return [UsersGetResponse]
  describe 'users_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_groups_get
  # Retrieve UserGroups
  # This API allows to get the list of the UserGroups.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :top A number of results to return. Applied after **$skip** 
  # @option opts [Integer] :skip An offset into the collection of results
  # @option opts [Boolean] :count If true, the server includes the count of all the items in the response 
  # @option opts [String] :order_by An ordering definition (eg. $orderBy&#x3D;updatedAt,desc)
  # @option opts [String] :filter A filter definition (eg. $filter&#x3D;name &#x3D;&#x3D; \&quot;Milk\&quot; or surname &#x3D;&#x3D; \&quot;Bread\&quot;)
  # @return [UserGroupGetResponse]
  describe 'users_groups_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_groups_post
  # Create a new UserGroups
  # This API allows to create a new UserGroups.
  # @param user_group UserGroup list to be added.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'users_groups_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_post
  # Create a new User
  # This API allows to create a new User.
  # @param create_user_request 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'users_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
